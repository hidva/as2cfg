use crate::parser::*;
use std::num::NonZeroU32;
use lalrpop_util::ParseError;

grammar;

pub Insts: Vec<AddressedInst> = {
    <i: addr_inst> => vec![i],
    <mut is: Insts> <i: addr_inst> => {
        is.push(i);
        is
    },
}

addr_inst: AddressedInst = {
    // 奇怪, 如果这里不加 `\n` 会导致 lalrpop 进入死循环? 反正就是一直不结束,
    <addr: HEXNUMBER> <i: inst> "\n" => AddressedInst {
        addr,
        inst: i,
        interested: false,
    },
    "=>" <addr: HEXNUMBER> <i: inst> "\n" => AddressedInst {
        addr,
        inst: i,
        interested: true,
    },
}

inst: Instruction = {
    <mnem: INST_MNEM> => Instruction::new(mnem, &[]),
    <mnem: INST_MNEM> <op0: operand> => Instruction::new(mnem, &[op0]),
    <mnem: INST_MNEM> <op0: operand> "," <op1: operand> => Instruction::new(mnem, &[op0, op1]),
    <mnem: INST_MNEM> <op0: operand> "," <op1: operand> "," <op2: operand> => Instruction::new(mnem, &[op0, op1, op2]),
    <prefix: inst_prefix> <mnem: INST_MNEM> => Instruction::new_prefix(prefix, mnem, &[]),
    <prefix: inst_prefix> <mnem: INST_MNEM> <op0: operand> => Instruction::new_prefix(prefix, mnem, &[op0]),
    <prefix: inst_prefix> <mnem: INST_MNEM> <op0: operand> "," <op1: operand> => Instruction::new_prefix(prefix, mnem, &[op0, op1]),
    <prefix: inst_prefix> <mnem: INST_MNEM> <op0: operand> "," <op1: operand> "," <op2: operand> => Instruction::new_prefix(prefix, mnem, &[op0, op1, op2]),
}

operand: Operand = {
    register_operand => Operand::Reg(<>),
    HEXNUMBER => Operand::Imme(<>),
    NUMBER => Operand::Imme(<>),
    // a memory location without a segment selector
    <opsize: operand_size_repr> <offset: memoffset> => Operand::Mem {
        seg_sel: None,
        offset,
        opsize: Some(opsize),
    },
    // with a segment selector
    <opsize: operand_size_repr> <sel: register_operand> ":" <offset: memoffset> => Operand::Mem {
        seg_sel: Some(sel),
        offset,
        opsize: Some(opsize),
    },
    // some instructions like lea etc hasn't operand_size_repr
    <sel: register_operand> ":" <offset: onlydispoffset> => Operand::Mem {
        seg_sel: Some(sel),
        offset,
        opsize: None,
    },
    <offset: otheroffset> => Operand::Mem {
        seg_sel: None,
        offset,
        opsize: None,
    },
    <sel: register_operand> ":" <offset: otheroffset> => Operand::Mem {
        seg_sel: Some(sel),
        offset,
        opsize: None,
    },
}

operand_size_repr: &'static str = {
    "BYTE PTR" => "BYTE PTR",
    "DWORD PTR" => "DWORD PTR",
    "FWORD PTR" => "FWORD PTR",
    "OWORD PTR" => "OWORD PTR",
    "QWORD PTR" => "QWORD PTR",
    "TBYTE PTR" => "TBYTE PTR",
    "WORD PTR" => "WORD PTR",
    "XMMWORD PTR" => "XMMWORD PTR",
    "YMMWORD PTR" => "YMMWORD PTR",
    "ZMMWORD PTR" => "ZMMWORD PTR",
}

register_operand: &'static str = {
    "gs" => "gs",
    "zmm23" => "zmm23",
    "edi" => "edi",
    "edx" => "edx",
    "r13w" => "r13w",
    "rsp" => "rsp",
    "r8b" => "r8b",
    "r8d" => "r8d",
    "ds" => "ds",
    "r13d" => "r13d",
    "r13b" => "r13b",
    "r8w" => "r8w",
    "ymm9" => "ymm9",
    "ymm8" => "ymm8",
    "r14" => "r14",
    "r15" => "r15",
    "r12" => "r12",
    "r13" => "r13",
    "r10" => "r10",
    "r11" => "r11",
    "ymm1" => "ymm1",
    "ymm0" => "ymm0",
    "ymm3" => "ymm3",
    "ymm2" => "ymm2",
    "ymm5" => "ymm5",
    "ymm4" => "ymm4",
    "ymm7" => "ymm7",
    "ymm6" => "ymm6",
    "zmm11" => "zmm11",
    "dx" => "dx",
    "ymm32" => "ymm32",
    "ymm31" => "ymm31",
    "ymm30" => "ymm30",
    "dil" => "dil",
    "r10b" => "r10b",
    "rbx" => "rbx",
    "bpl" => "bpl",
    "r10d" => "r10d",
    "xmm10" => "xmm10",
    "xmm11" => "xmm11",
    "xmm12" => "xmm12",
    "xmm13" => "xmm13",
    "xmm14" => "xmm14",
    "xmm15" => "xmm15",
    "xmm16" => "xmm16",
    "xmm17" => "xmm17",
    "xmm18" => "xmm18",
    "xmm19" => "xmm19",
    "sil" => "sil",
    "r10w" => "r10w",
    "zmm17" => "zmm17",
    "mm5" => "mm5",
    "mm4" => "mm4",
    "mm7" => "mm7",
    "mm6" => "mm6",
    "mm1" => "mm1",
    "mm0" => "mm0",
    "mm3" => "mm3",
    "mm2" => "mm2",
    "ymm28" => "ymm28",
    "ymm29" => "ymm29",
    "ebp" => "ebp",
    "ymm20" => "ymm20",
    "ymm21" => "ymm21",
    "ymm22" => "ymm22",
    "ymm23" => "ymm23",
    "ymm24" => "ymm24",
    "ymm25" => "ymm25",
    "ymm26" => "ymm26",
    "ymm27" => "ymm27",
    "r15d" => "r15d",
    "r15b" => "r15b",
    "esp" => "esp",
    "r15w" => "r15w",
    "esi" => "esi",
    "bl" => "bl",
    "bh" => "bh",
    "xmm2" => "xmm2",
    "xmm3" => "xmm3",
    "xmm0" => "xmm0",
    "xmm1" => "xmm1",
    "xmm6" => "xmm6",
    "xmm7" => "xmm7",
    "xmm4" => "xmm4",
    "xmm5" => "xmm5",
    "xmm8" => "xmm8",
    "xmm9" => "xmm9",
    "bx" => "bx",
    "ecx" => "ecx",
    "dl" => "dl",
    "r12w" => "r12w",
    "r9d" => "r9d",
    "r9b" => "r9b",
    "r9" => "r9",
    "r12b" => "r12b",
    "r12d" => "r12d",
    "r9w" => "r9w",
    "ebx" => "ebx",
    "rdi" => "rdi",
    "ch" => "ch",
    "cl" => "cl",
    "cx" => "cx",
    "cs" => "cs",
    "rcx" => "rcx",
    "ah" => "ah",
    "xmm29" => "xmm29",
    "xmm28" => "xmm28",
    "rsi" => "rsi",
    "xmm21" => "xmm21",
    "xmm20" => "xmm20",
    "xmm23" => "xmm23",
    "xmm22" => "xmm22",
    "xmm25" => "xmm25",
    "xmm24" => "xmm24",
    "xmm27" => "xmm27",
    "xmm26" => "xmm26",
    "zmm8" => "zmm8",
    "zmm9" => "zmm9",
    "zmm0" => "zmm0",
    "zmm1" => "zmm1",
    "zmm2" => "zmm2",
    "zmm3" => "zmm3",
    "zmm4" => "zmm4",
    "zmm5" => "zmm5",
    "zmm6" => "zmm6",
    "zmm7" => "zmm7",
    "zmm12" => "zmm12",
    "zmm13" => "zmm13",
    "zmm10" => "zmm10",
    "r14d" => "r14d",
    "zmm16" => "zmm16",
    "r14b" => "r14b",
    "zmm14" => "zmm14",
    "zmm15" => "zmm15",
    "zmm18" => "zmm18",
    "zmm19" => "zmm19",
    "rbp" => "rbp",
    "r14w" => "r14w",
    "ss" => "ss",
    "spl" => "spl",
    "di" => "di",
    "bnd0" => "bnd0",
    "bnd1" => "bnd1",
    "bnd2" => "bnd2",
    "bnd3" => "bnd3",
    "xmm32" => "xmm32",
    "r8" => "r8",
    "xmm30" => "xmm30",
    "xmm31" => "xmm31",
    "al" => "al",
    "rdx" => "rdx",
    "bp" => "bp",
    "ax" => "ax",
    "rax" => "rax",
    "dh" => "dh",
    "zmm29" => "zmm29",
    "zmm28" => "zmm28",
    "zmm27" => "zmm27",
    "zmm26" => "zmm26",
    "r11b" => "r11b",
    "zmm24" => "zmm24",
    "r11d" => "r11d",
    "zmm22" => "zmm22",
    "zmm21" => "zmm21",
    "zmm20" => "zmm20",
    "es" => "es",
    "r11w" => "r11w",
    "fs" => "fs",
    "ymm11" => "ymm11",
    "ymm10" => "ymm10",
    "ymm13" => "ymm13",
    "ymm12" => "ymm12",
    "ymm15" => "ymm15",
    "ymm14" => "ymm14",
    "ymm17" => "ymm17",
    "ymm16" => "ymm16",
    "ymm19" => "ymm19",
    "ymm18" => "ymm18",
    "eax" => "eax",
    "zmm30" => "zmm30",
    "zmm31" => "zmm31",
    "zmm32" => "zmm32",
    "sp" => "sp",
    "si" => "si",
    "zmm25" => "zmm25",
    "eflags" => "eflags",
    "rip" => "rip",
}

inst_prefix: &'static str = {
    "rep" => "rep",
    "repz" => "repz",
    "repe" => "repe",
    "repne" => "repne",
    "repnz" => "repnz",
    "lock" => "lock",
}

onlydispoffset: MemOffset = {
    <n:HEXNUMBER> => MemOffset {
        disp: Some(n as i64),
        base: None,
        index_scale: None,
    },
}

otheroffset: MemOffset = {
    "[" <r: register_operand> "+" <disp: HEXNUMBER> "]" => MemOffset {
        disp: Some(disp as i64),
        base: Some(r),
        index_scale: None,
    },
    "[" <r: register_operand> "-" <disp: HEXNUMBER> "]" => MemOffset {
        disp: Some(-(disp as i64)),
        base: Some(r),
        index_scale: None,
    },
    "[" <r: register_operand> "]" => MemOffset {
        disp: None,
        base: Some(r),
        index_scale: None,
    },
    "[" <base: register_operand> "+" <index: register_operand> "*" <scale: NUMBER> "]" => MemOffset {
        disp: None,
        base: Some(base),
        index_scale: Some((index, NonZeroU32::new(scale.try_into().unwrap()).unwrap())),
    },
    "[" <base: register_operand> "+" <index: register_operand> "*" <scale: NUMBER> "+" <disp: HEXNUMBER> "]" => MemOffset {
        disp: Some(disp as i64),
        base: Some(base),
        index_scale: Some((index, NonZeroU32::new(scale.try_into().unwrap()).unwrap())),
    },
    "[" <base: register_operand> "+" <index: register_operand> "*" <scale: NUMBER> "-" <disp: HEXNUMBER> "]" => MemOffset {
        disp: Some(-(disp as i64)),
        base: Some(base),
        index_scale: Some((index, NonZeroU32::new(scale.try_into().unwrap()).unwrap())),
    },
    "[" <index: register_operand> "*" <scale: NUMBER> "+" <disp: HEXNUMBER> "]" => MemOffset {
        disp: Some(disp as i64),
        base: None,
        index_scale: Some((index, NonZeroU32::new(scale.try_into().unwrap()).unwrap())),
    },
    "[" <index: register_operand> "*" <scale: NUMBER> "-" <disp: HEXNUMBER> "]" => MemOffset {
        disp: Some(-(disp as i64)),
        base: None,
        index_scale: Some((index, NonZeroU32::new(scale.try_into().unwrap()).unwrap())),
    },
    "[" <index: register_operand> "*" <scale: NUMBER>  "]" => MemOffset {
        disp: None,
        base: None,
        index_scale: Some((index, NonZeroU32::new(scale.try_into().unwrap()).unwrap())),
    },
}

memoffset: MemOffset = {
    onlydispoffset,
    otheroffset,
}

HEXNUMBER: u64 = {
    <s:r"0x[0-9a-f]+"> =>? u64::from_str_radix(&s[2..], 16).map_err(|_| ParseError::User {
        error: "invalid hex number"
    }),
}

NUMBER: u64 = {
    <s:r"[0-9]+"> =>? u64::from_str_radix(s, 10).map_err(|_| ParseError::User {
        error: "invalid number"
    }),
}

// 指令助记符.
// Generated from https://www.felixcloutier.com/x86/, Thanks very much!
// Derived from the May 2019 version of the Intel® 64 and IA-32 Architectures Software Developer’s Manual. Last updated 2019-05-30.
INST_MNEM: &'static str = {
    "aaa" => "aaa",
    "aad" => "aad",
    "aam" => "aam",
    "aas" => "aas",
    "adc" => "adc",
    "adcx" => "adcx",
    "add" => "add",
    "addpd" => "addpd",
    "addps" => "addps",
    "addsd" => "addsd",
    "addss" => "addss",
    "addsubpd" => "addsubpd",
    "addsubps" => "addsubps",
    "vaddpd" => "vaddpd",
    "vaddps" => "vaddps",
    "vaddsd" => "vaddsd",
    "vaddss" => "vaddss",
    "vaddsubpd" => "vaddsubpd",
    "vaddsubps" => "vaddsubps",
    "adox" => "adox",
    "aesdec" => "aesdec",
    "aesdeclast" => "aesdeclast",
    "aesenc" => "aesenc",
    "aesenclast" => "aesenclast",
    "aesimc" => "aesimc",
    "aeskeygenassist" => "aeskeygenassist",
    "and" => "and",
    "andn" => "andn",
    "andnpd" => "andnpd",
    "andnps" => "andnps",
    "andpd" => "andpd",
    "andps" => "andps",
    "arpl" => "arpl",
    "bextr" => "bextr",
    "blendpd" => "blendpd",
    "blendps" => "blendps",
    "blendvpd" => "blendvpd",
    "blendvps" => "blendvps",
    "blsi" => "blsi",
    "blsmsk" => "blsmsk",
    "blsr" => "blsr",
    "bndcl" => "bndcl",
    "bndcn" => "bndcn",
    "bndcu" => "bndcu",
    "bndldx" => "bndldx",
    "bndmk" => "bndmk",
    "bndmov" => "bndmov",
    "bndstx" => "bndstx",
    "bound" => "bound",
    "bsf" => "bsf",
    "bsr" => "bsr",
    "bswap" => "bswap",
    "bt" => "bt",
    "btc" => "btc",
    "btr" => "btr",
    "bts" => "bts",
    "bzhi" => "bzhi",
    "call" => "call",
    "cbw" => "cbw",
    "cdq" => "cdq",
    "cdqe" => "cdqe",
    "clac" => "clac",
    "clc" => "clc",
    "cld" => "cld",
    "cldemote" => "cldemote",
    "clflush" => "clflush",
    "clflushopt" => "clflushopt",
    "cli" => "cli",
    "clts" => "clts",
    "clwb" => "clwb",
    "cmc" => "cmc",
    "cmova" => "cmova",
    "cmovae" => "cmovae",
    "cmovb" => "cmovb",
    "cmovbe" => "cmovbe",
    "cmovc" => "cmovc",
    "cmove" => "cmove",
    "cmovg" => "cmovg",
    "cmovge" => "cmovge",
    "cmovl" => "cmovl",
    "cmovle" => "cmovle",
    "cmovna" => "cmovna",
    "cmovnae" => "cmovnae",
    "cmovnb" => "cmovnb",
    "cmovnbe" => "cmovnbe",
    "cmovnc" => "cmovnc",
    "cmovne" => "cmovne",
    "cmovng" => "cmovng",
    "cmovnge" => "cmovnge",
    "cmovnl" => "cmovnl",
    "cmovnle" => "cmovnle",
    "cmovno" => "cmovno",
    "cmovnp" => "cmovnp",
    "cmovns" => "cmovns",
    "cmovnz" => "cmovnz",
    "cmovo" => "cmovo",
    "cmovp" => "cmovp",
    "cmovpe" => "cmovpe",
    "cmovpo" => "cmovpo",
    "cmovs" => "cmovs",
    "cmovz" => "cmovz",
    "cmp" => "cmp",
    "cmppd" => "cmppd",
    "cmpps" => "cmpps",
    "cmps" => "cmps",
    "cmpsb" => "cmpsb",
    "cmpsd" => "cmpsd",
    "cmpsq" => "cmpsq",
    "cmpss" => "cmpss",
    "cmpsw" => "cmpsw",
    "cmpxchg" => "cmpxchg",
    "cmpxchg16b" => "cmpxchg16b",
    "cmpxchg8b" => "cmpxchg8b",
    "comisd" => "comisd",
    "comiss" => "comiss",
    "cpuid" => "cpuid",
    "cqo" => "cqo",
    "crc32" => "crc32",
    "cvtdq2pd" => "cvtdq2pd",
    "cvtdq2ps" => "cvtdq2ps",
    "cvtpd2dq" => "cvtpd2dq",
    "cvtpd2pi" => "cvtpd2pi",
    "cvtpd2ps" => "cvtpd2ps",
    "cvtpi2pd" => "cvtpi2pd",
    "cvtpi2ps" => "cvtpi2ps",
    "cvtps2dq" => "cvtps2dq",
    "cvtps2pd" => "cvtps2pd",
    "cvtps2pi" => "cvtps2pi",
    "cvtsd2si" => "cvtsd2si",
    "cvtsd2ss" => "cvtsd2ss",
    "cvtsi2sd" => "cvtsi2sd",
    "cvtsi2ss" => "cvtsi2ss",
    "cvtss2sd" => "cvtss2sd",
    "cvtss2si" => "cvtss2si",
    "cvttpd2dq" => "cvttpd2dq",
    "cvttpd2pi" => "cvttpd2pi",
    "cvttps2dq" => "cvttps2dq",
    "cvttps2pi" => "cvttps2pi",
    "cvttsd2si" => "cvttsd2si",
    "cvttss2si" => "cvttss2si",
    "vcvtdq2pd" => "vcvtdq2pd",
    "vcvtdq2ps" => "vcvtdq2ps",
    "vcvtpd2dq" => "vcvtpd2dq",
    "vcvtpd2pi" => "vcvtpd2pi",
    "vcvtpd2ps" => "vcvtpd2ps",
    "vcvtpi2pd" => "vcvtpi2pd",
    "vcvtpi2ps" => "vcvtpi2ps",
    "vcvtps2dq" => "vcvtps2dq",
    "vcvtps2pd" => "vcvtps2pd",
    "vcvtps2pi" => "vcvtps2pi",
    "vcvtsd2si" => "vcvtsd2si",
    "vcvtsd2ss" => "vcvtsd2ss",
    "vcvtsi2sd" => "vcvtsi2sd",
    "vcvtsi2ss" => "vcvtsi2ss",
    "vcvtss2sd" => "vcvtss2sd",
    "vcvtss2si" => "vcvtss2si",
    "vcvttpd2dq" => "vcvttpd2dq",
    "vcvttpd2pi" => "vcvttpd2pi",
    "vcvttps2dq" => "vcvttps2dq",
    "vcvttps2pi" => "vcvttps2pi",
    "vcvttsd2si" => "vcvttsd2si",
    "vcvttss2si" => "vcvttss2si",
    "cwd" => "cwd",
    "cwde" => "cwde",
    "daa" => "daa",
    "das" => "das",
    "dec" => "dec",
    "div" => "div",
    "divpd" => "divpd",
    "divps" => "divps",
    "divsd" => "divsd",
    "divss" => "divss",
    "dppd" => "dppd",
    "dpps" => "dpps",
    "vdivpd" => "vdivpd",
    "vdivps" => "vdivps",
    "vdivsd" => "vdivsd",
    "vdivss" => "vdivss",
    "vdppd" => "vdppd",
    "vdpps" => "vdpps",
    "emms" => "emms",
    "encls" => "encls",
    "enclu" => "enclu",
    "enclv" => "enclv",
    "enter" => "enter",
    "extractps" => "extractps",
    "f2xm1" => "f2xm1",
    "fabs" => "fabs",
    "fadd" => "fadd",
    "faddp" => "faddp",
    "fbld" => "fbld",
    "fbstp" => "fbstp",
    "fchs" => "fchs",
    "fclex" => "fclex",
    "fcmovb" => "fcmovb",
    "fcmovbe" => "fcmovbe",
    "fcmove" => "fcmove",
    "fcmovnb" => "fcmovnb",
    "fcmovnbe" => "fcmovnbe",
    "fcmovne" => "fcmovne",
    "fcmovnu" => "fcmovnu",
    "fcmovu" => "fcmovu",
    "fcom" => "fcom",
    "fcomi" => "fcomi",
    "fcomip" => "fcomip",
    "fcomp" => "fcomp",
    "fcompp" => "fcompp",
    "fcos" => "fcos",
    "fdecstp" => "fdecstp",
    "fdiv" => "fdiv",
    "fdivp" => "fdivp",
    "fdivr" => "fdivr",
    "fdivrp" => "fdivrp",
    "ffree" => "ffree",
    "fiadd" => "fiadd",
    "ficom" => "ficom",
    "ficomp" => "ficomp",
    "fidiv" => "fidiv",
    "fidivr" => "fidivr",
    "fild" => "fild",
    "fimul" => "fimul",
    "fincstp" => "fincstp",
    "finit" => "finit",
    "fist" => "fist",
    "fistp" => "fistp",
    "fisttp" => "fisttp",
    "fisub" => "fisub",
    "fisubr" => "fisubr",
    "fld" => "fld",
    "fld1" => "fld1",
    "fldcw" => "fldcw",
    "fldenv" => "fldenv",
    "fldl2e" => "fldl2e",
    "fldl2t" => "fldl2t",
    "fldlg2" => "fldlg2",
    "fldln2" => "fldln2",
    "fldpi" => "fldpi",
    "fldz" => "fldz",
    "fmul" => "fmul",
    "fmulp" => "fmulp",
    "fnclex" => "fnclex",
    "fninit" => "fninit",
    "fnop" => "fnop",
    "fnsave" => "fnsave",
    "fnstcw" => "fnstcw",
    "fnstenv" => "fnstenv",
    "fnstsw" => "fnstsw",
    "fpatan" => "fpatan",
    "fprem" => "fprem",
    "fprem1" => "fprem1",
    "fptan" => "fptan",
    "frndint" => "frndint",
    "frstor" => "frstor",
    "fsave" => "fsave",
    "fscale" => "fscale",
    "fsin" => "fsin",
    "fsincos" => "fsincos",
    "fsqrt" => "fsqrt",
    "fst" => "fst",
    "fstcw" => "fstcw",
    "fstenv" => "fstenv",
    "fstp" => "fstp",
    "fstsw" => "fstsw",
    "fsub" => "fsub",
    "fsubp" => "fsubp",
    "fsubr" => "fsubr",
    "fsubrp" => "fsubrp",
    "ftst" => "ftst",
    "fucom" => "fucom",
    "fucomi" => "fucomi",
    "fucomip" => "fucomip",
    "fucomp" => "fucomp",
    "fucompp" => "fucompp",
    "fwait" => "fwait",
    "fxam" => "fxam",
    "fxch" => "fxch",
    "fxrstor" => "fxrstor",
    "fxsave" => "fxsave",
    "fxtract" => "fxtract",
    "fyl2x" => "fyl2x",
    "fyl2xp1" => "fyl2xp1",
    "getsec" => "getsec",
    "gf2p8affineinvqb" => "gf2p8affineinvqb",
    "gf2p8affineqb" => "gf2p8affineqb",
    "gf2p8mulb" => "gf2p8mulb",
    "haddpd" => "haddpd",
    "haddps" => "haddps",
    "hlt" => "hlt",
    "hsubpd" => "hsubpd",
    "hsubps" => "hsubps",
    "idiv" => "idiv",
    "imul" => "imul",
    "in" => "in",
    "inc" => "inc",
    "ins" => "ins",
    "insb" => "insb",
    "insd" => "insd",
    "insertps" => "insertps",
    "insw" => "insw",
    "int" => "int",
    "int1" => "int1",
    "int3" => "int3",
    "into" => "into",
    "invd" => "invd",
    "invept" => "invept",
    "invlpg" => "invlpg",
    "invpcid" => "invpcid",
    "invvpid" => "invvpid",
    "iret" => "iret",
    "iretd" => "iretd",
    "ja" => "ja",
    "jae" => "jae",
    "jb" => "jb",
    "jbe" => "jbe",
    "jc" => "jc",
    "jcxz" => "jcxz",
    "je" => "je",
    "jecxz" => "jecxz",
    "jg" => "jg",
    "jge" => "jge",
    "jl" => "jl",
    "jle" => "jle",
    "jna" => "jna",
    "jnae" => "jnae",
    "jnb" => "jnb",
    "jnbe" => "jnbe",
    "jnc" => "jnc",
    "jne" => "jne",
    "jng" => "jng",
    "jnge" => "jnge",
    "jnl" => "jnl",
    "jnle" => "jnle",
    "jno" => "jno",
    "jnp" => "jnp",
    "jns" => "jns",
    "jnz" => "jnz",
    "jo" => "jo",
    "jp" => "jp",
    "jpe" => "jpe",
    "jpo" => "jpo",
    "jrcxz" => "jrcxz",
    "js" => "js",
    "jz" => "jz",
    "jmp" => "jmp",
    "kaddb" => "kaddb",
    "kaddd" => "kaddd",
    "kaddq" => "kaddq",
    "kaddw" => "kaddw",
    "kandb" => "kandb",
    "kandd" => "kandd",
    "kandnb" => "kandnb",
    "kandnd" => "kandnd",
    "kandnq" => "kandnq",
    "kandnw" => "kandnw",
    "kandq" => "kandq",
    "kandw" => "kandw",
    "kmovb" => "kmovb",
    "kmovd" => "kmovd",
    "kmovq" => "kmovq",
    "kmovw" => "kmovw",
    "knotb" => "knotb",
    "knotd" => "knotd",
    "knotq" => "knotq",
    "knotw" => "knotw",
    "korb" => "korb",
    "kord" => "kord",
    "korq" => "korq",
    "kortestb" => "kortestb",
    "kortestd" => "kortestd",
    "kortestq" => "kortestq",
    "kortestw" => "kortestw",
    "korw" => "korw",
    "kshiftlb" => "kshiftlb",
    "kshiftld" => "kshiftld",
    "kshiftlq" => "kshiftlq",
    "kshiftlw" => "kshiftlw",
    "kshiftrb" => "kshiftrb",
    "kshiftrd" => "kshiftrd",
    "kshiftrq" => "kshiftrq",
    "kshiftrw" => "kshiftrw",
    "ktestb" => "ktestb",
    "ktestd" => "ktestd",
    "ktestq" => "ktestq",
    "ktestw" => "ktestw",
    "kunpckbw" => "kunpckbw",
    "kunpckdq" => "kunpckdq",
    "kunpckwd" => "kunpckwd",
    "kxnorb" => "kxnorb",
    "kxnord" => "kxnord",
    "kxnorq" => "kxnorq",
    "kxnorw" => "kxnorw",
    "kxorb" => "kxorb",
    "kxord" => "kxord",
    "kxorq" => "kxorq",
    "kxorw" => "kxorw",
    "lahf" => "lahf",
    "lar" => "lar",
    "lddqu" => "lddqu",
    "ldmxcsr" => "ldmxcsr",
    "lds" => "lds",
    "lea" => "lea",
    "leave" => "leave",
    "les" => "les",
    "lfence" => "lfence",
    "lfs" => "lfs",
    "lgdt" => "lgdt",
    "lgs" => "lgs",
    "lidt" => "lidt",
    "lldt" => "lldt",
    "lmsw" => "lmsw",
    "lock" => "lock",
    "lods" => "lods",
    "lodsb" => "lodsb",
    "lodsd" => "lodsd",
    "lodsq" => "lodsq",
    "lodsw" => "lodsw",
    "loop" => "loop",
    "loope" => "loope",
    "loopne" => "loopne",
    "lsl" => "lsl",
    "lss" => "lss",
    "ltr" => "ltr",
    "lzcnt" => "lzcnt",
    "maskmovdqu" => "maskmovdqu",
    "maskmovq" => "maskmovq",
    "maxpd" => "maxpd",
    "maxps" => "maxps",
    "maxsd" => "maxsd",
    "maxss" => "maxss",
    "mfence" => "mfence",
    "minpd" => "minpd",
    "minps" => "minps",
    "minsd" => "minsd",
    "minss" => "minss",
    "monitor" => "monitor",
    "mov" => "mov",
    "movabs" => "movabs",
    "movapd" => "movapd",
    "vmovapd" => "vmovapd",
    "movaps" => "movaps",
    "vmovaps" => "vmovaps",
    "movbe" => "movbe",
    "movd" => "movd",
    "movddup" => "movddup",
    "movdir64b" => "movdir64b",
    "movdiri" => "movdiri",
    "movdq2q" => "movdq2q",
    "movdqa" => "movdqa",
    "movdqu" => "movdqu",
    "movhlps" => "movhlps",
    "movhpd" => "movhpd",
    "movhps" => "movhps",
    "movlhps" => "movlhps",
    "movlpd" => "movlpd",
    "movlps" => "movlps",
    "movmskpd" => "movmskpd",
    "movmskps" => "movmskps",
    "movntdq" => "movntdq",
    "movntdqa" => "movntdqa",
    "movnti" => "movnti",
    "movntpd" => "movntpd",
    "movntps" => "movntps",
    "movntq" => "movntq",
    "movq" => "movq",
    "movq2dq" => "movq2dq",
    "movs" => "movs",
    "movsb" => "movsb",
    "movsd" => "movsd",
    "vmovsd" => "vmovsd",
    "movshdup" => "movshdup",
    "movsldup" => "movsldup",
    "movsq" => "movsq",
    "movss" => "movss",
    "movsw" => "movsw",
    "movsx" => "movsx",
    "movsxd" => "movsxd",
    "movupd" => "movupd",
    "movups" => "movups",
    "vmovups" => "vmovups",
    "movzx" => "movzx",
    "mpsadbw" => "mpsadbw",
    "mul" => "mul",
    "mulpd" => "mulpd",
    "mulps" => "mulps",
    "mulsd" => "mulsd",
    "mulss" => "mulss",
    "vmulpd" => "vmulpd",
    "vmulps" => "vmulps",
    "vmulsd" => "vmulsd",
    "vmulss" => "vmulss",
    "mulx" => "mulx",
    "mwait" => "mwait",
    "neg" => "neg",
    "nop" => "nop",
    "not" => "not",
    "or" => "or",
    "orpd" => "orpd",
    "orps" => "orps",
    "out" => "out",
    "outs" => "outs",
    "outsb" => "outsb",
    "outsd" => "outsd",
    "outsw" => "outsw",
    "pabsb" => "pabsb",
    "pabsd" => "pabsd",
    "pabsq" => "pabsq",
    "pabsw" => "pabsw",
    "packssdw" => "packssdw",
    "packsswb" => "packsswb",
    "packusdw" => "packusdw",
    "packuswb" => "packuswb",
    "paddb" => "paddb",
    "paddd" => "paddd",
    "paddq" => "paddq",
    "paddsb" => "paddsb",
    "paddsw" => "paddsw",
    "paddusb" => "paddusb",
    "paddusw" => "paddusw",
    "paddw" => "paddw",
    "palignr" => "palignr",
    "pand" => "pand",
    "pandn" => "pandn",
    "pause" => "pause",
    "pavgb" => "pavgb",
    "pavgw" => "pavgw",
    "pblendvb" => "pblendvb",
    "pblendw" => "pblendw",
    "pclmulqdq" => "pclmulqdq",
    "pcmpeqb" => "pcmpeqb",
    "pcmpeqd" => "pcmpeqd",
    "pcmpeqq" => "pcmpeqq",
    "pcmpeqw" => "pcmpeqw",
    "pcmpestri" => "pcmpestri",
    "pcmpestrm" => "pcmpestrm",
    "pcmpgtb" => "pcmpgtb",
    "pcmpgtd" => "pcmpgtd",
    "pcmpgtq" => "pcmpgtq",
    "pcmpgtw" => "pcmpgtw",
    "pcmpistri" => "pcmpistri",
    "pcmpistrm" => "pcmpistrm",
    "pdep" => "pdep",
    "pext" => "pext",
    "pextrb" => "pextrb",
    "pextrd" => "pextrd",
    "pextrq" => "pextrq",
    "pextrw" => "pextrw",
    "phaddd" => "phaddd",
    "phaddsw" => "phaddsw",
    "phaddw" => "phaddw",
    "phminposuw" => "phminposuw",
    "phsubd" => "phsubd",
    "phsubsw" => "phsubsw",
    "phsubw" => "phsubw",
    "pinsrb" => "pinsrb",
    "pinsrd" => "pinsrd",
    "pinsrq" => "pinsrq",
    "pinsrw" => "pinsrw",
    "pmaddubsw" => "pmaddubsw",
    "pmaddwd" => "pmaddwd",
    "pmaxsb" => "pmaxsb",
    "pmaxsd" => "pmaxsd",
    "pmaxsq" => "pmaxsq",
    "pmaxsw" => "pmaxsw",
    "pmaxub" => "pmaxub",
    "pmaxud" => "pmaxud",
    "pmaxuq" => "pmaxuq",
    "pmaxuw" => "pmaxuw",
    "pminsb" => "pminsb",
    "pminsd" => "pminsd",
    "pminsq" => "pminsq",
    "pminsw" => "pminsw",
    "pminub" => "pminub",
    "pminud" => "pminud",
    "pminuq" => "pminuq",
    "pminuw" => "pminuw",
    "pmovmskb" => "pmovmskb",
    "pmovsx" => "pmovsx",
    "pmovzx" => "pmovzx",
    "pmuldq" => "pmuldq",
    "pmulhrsw" => "pmulhrsw",
    "pmulhuw" => "pmulhuw",
    "pmulhw" => "pmulhw",
    "pmulld" => "pmulld",
    "pmullq" => "pmullq",
    "pmullw" => "pmullw",
    "pmuludq" => "pmuludq",
    "pop" => "pop",
    "popa" => "popa",
    "popad" => "popad",
    "popcnt" => "popcnt",
    "popf" => "popf",
    "popfd" => "popfd",
    "popfq" => "popfq",
    "por" => "por",
    "prefetchh" => "prefetchh",
    "prefetchw" => "prefetchw",
    "prefetchwt1" => "prefetchwt1",
    "psadbw" => "psadbw",
    "pshufb" => "pshufb",
    "pshufd" => "pshufd",
    "pshufhw" => "pshufhw",
    "pshuflw" => "pshuflw",
    "pshufw" => "pshufw",
    "psignb" => "psignb",
    "psignd" => "psignd",
    "psignw" => "psignw",
    "pslld" => "pslld",
    "pslldq" => "pslldq",
    "psllq" => "psllq",
    "psllw" => "psllw",
    "psrad" => "psrad",
    "psraq" => "psraq",
    "psraw" => "psraw",
    "psrld" => "psrld",
    "psrldq" => "psrldq",
    "psrlq" => "psrlq",
    "psrlw" => "psrlw",
    "psubb" => "psubb",
    "psubd" => "psubd",
    "psubq" => "psubq",
    "psubsb" => "psubsb",
    "psubsw" => "psubsw",
    "psubusb" => "psubusb",
    "psubusw" => "psubusw",
    "psubw" => "psubw",
    "ptest" => "ptest",
    "ptwrite" => "ptwrite",
    "punpckhbw" => "punpckhbw",
    "punpckhdq" => "punpckhdq",
    "punpckhqdq" => "punpckhqdq",
    "punpckhwd" => "punpckhwd",
    "punpcklbw" => "punpcklbw",
    "punpckldq" => "punpckldq",
    "punpcklqdq" => "punpcklqdq",
    "punpcklwd" => "punpcklwd",
    "push" => "push",
    "pusha" => "pusha",
    "pushad" => "pushad",
    "pushf" => "pushf",
    "pushfd" => "pushfd",
    "pushfq" => "pushfq",
    "pxor" => "pxor",
    "vpxor" => "vpxor",
    "rcl" => "rcl",
    "rcpps" => "rcpps",
    "rcpss" => "rcpss",
    "rcr" => "rcr",
    "rdfsbase" => "rdfsbase",
    "rdgsbase" => "rdgsbase",
    "rdmsr" => "rdmsr",
    "rdpid" => "rdpid",
    "rdpkru" => "rdpkru",
    "rdpmc" => "rdpmc",
    "rdrand" => "rdrand",
    "rdseed" => "rdseed",
    "rdtsc" => "rdtsc",
    "rdtscp" => "rdtscp",
    "rep" => "rep",
    "repe" => "repe",
    "repne" => "repne",
    "repnz" => "repnz",
    "repz" => "repz",
    "ret" => "ret",
    "rol" => "rol",
    "ror" => "ror",
    "rorx" => "rorx",
    "roundpd" => "roundpd",
    "roundps" => "roundps",
    "roundsd" => "roundsd",
    "roundss" => "roundss",
    "rsm" => "rsm",
    "rsqrtps" => "rsqrtps",
    "rsqrtss" => "rsqrtss",
    "sahf" => "sahf",
    "sal" => "sal",
    "sar" => "sar",
    "sarx" => "sarx",
    "sbb" => "sbb",
    "scas" => "scas",
    "scasb" => "scasb",
    "scasd" => "scasd",
    "scasw" => "scasw",
    "seta" => "seta",
    "setae" => "setae",
    "setb" => "setb",
    "setbe" => "setbe",
    "setc" => "setc",
    "sete" => "sete",
    "setg" => "setg",
    "setge" => "setge",
    "setl" => "setl",
    "setle" => "setle",
    "setna" => "setna",
    "setnae" => "setnae",
    "setnb" => "setnb",
    "setnbe" => "setnbe",
    "setnc" => "setnc",
    "setne" => "setne",
    "setng" => "setng",
    "setnge" => "setnge",
    "setnl" => "setnl",
    "setnle" => "setnle",
    "setno" => "setno",
    "setnp" => "setnp",
    "setns" => "setns",
    "setnz" => "setnz",
    "seto" => "seto",
    "setp" => "setp",
    "setpe" => "setpe",
    "setpo" => "setpo",
    "sets" => "sets",
    "setz" => "setz",
    "sfence" => "sfence",
    "sgdt" => "sgdt",
    "sha1msg1" => "sha1msg1",
    "sha1msg2" => "sha1msg2",
    "sha1nexte" => "sha1nexte",
    "sha1rnds4" => "sha1rnds4",
    "sha256msg1" => "sha256msg1",
    "sha256msg2" => "sha256msg2",
    "sha256rnds2" => "sha256rnds2",
    "shl" => "shl",
    "shld" => "shld",
    "shlx" => "shlx",
    "shr" => "shr",
    "shrd" => "shrd",
    "shrx" => "shrx",
    "shufpd" => "shufpd",
    "shufps" => "shufps",
    "sidt" => "sidt",
    "sldt" => "sldt",
    "smsw" => "smsw",
    "sqrtpd" => "sqrtpd",
    "sqrtps" => "sqrtps",
    "sqrtsd" => "sqrtsd",
    "sqrtss" => "sqrtss",
    "stac" => "stac",
    "stc" => "stc",
    "std" => "std",
    "sti" => "sti",
    "stmxcsr" => "stmxcsr",
    "stos" => "stos",
    "stosb" => "stosb",
    "stosd" => "stosd",
    "stosq" => "stosq",
    "stosw" => "stosw",
    "str" => "str",
    "sub" => "sub",
    "subpd" => "subpd",
    "vsubpd" => "vsubpd",
    "subps" => "subps",
    "vsubps" => "vsubps",
    "subsd" => "subsd",
    "vsubsd" => "vsubsd",
    "subss" => "subss",
    "vsubss" => "vsubss",
    "swapgs" => "swapgs",
    "syscall" => "syscall",
    "sysenter" => "sysenter",
    "sysexit" => "sysexit",
    "sysret" => "sysret",
    "test" => "test",
    "tpause" => "tpause",
    "tzcnt" => "tzcnt",
    "ucomisd" => "ucomisd",
    "ucomiss" => "ucomiss",
    "vucomisd" => "vucomisd",
    "vucomiss" => "vucomiss",
    "ud" => "ud",
    "umonitor" => "umonitor",
    "umwait" => "umwait",
    "unpckhpd" => "unpckhpd",
    "unpckhps" => "unpckhps",
    "unpcklpd" => "unpcklpd",
    "unpcklps" => "unpcklps",
    "v4fmaddps" => "v4fmaddps",
    "v4fmaddss" => "v4fmaddss",
    "v4fnmaddps" => "v4fnmaddps",
    "v4fnmaddss" => "v4fnmaddss",
    "valignd" => "valignd",
    "valignq" => "valignq",
    "vblendmpd" => "vblendmpd",
    "vblendmps" => "vblendmps",
    "vbroadcast" => "vbroadcast",
    "vcompresspd" => "vcompresspd",
    "vcompressps" => "vcompressps",
    "vcvtpd2qq" => "vcvtpd2qq",
    "vcvtpd2udq" => "vcvtpd2udq",
    "vcvtpd2uqq" => "vcvtpd2uqq",
    "vcvtph2ps" => "vcvtph2ps",
    "vcvtps2ph" => "vcvtps2ph",
    "vcvtps2qq" => "vcvtps2qq",
    "vcvtps2udq" => "vcvtps2udq",
    "vcvtps2uqq" => "vcvtps2uqq",
    "vcvtqq2pd" => "vcvtqq2pd",
    "vcvtqq2ps" => "vcvtqq2ps",
    "vcvtsd2usi" => "vcvtsd2usi",
    "vcvtss2usi" => "vcvtss2usi",
    "vcvttpd2qq" => "vcvttpd2qq",
    "vcvttpd2udq" => "vcvttpd2udq",
    "vcvttpd2uqq" => "vcvttpd2uqq",
    "vcvttps2qq" => "vcvttps2qq",
    "vcvttps2udq" => "vcvttps2udq",
    "vcvttps2uqq" => "vcvttps2uqq",
    "vcvttsd2usi" => "vcvttsd2usi",
    "vcvttss2usi" => "vcvttss2usi",
    "vcvtudq2pd" => "vcvtudq2pd",
    "vcvtudq2ps" => "vcvtudq2ps",
    "vcvtuqq2pd" => "vcvtuqq2pd",
    "vcvtuqq2ps" => "vcvtuqq2ps",
    "vcvtusi2sd" => "vcvtusi2sd",
    "vcvtusi2ss" => "vcvtusi2ss",
    "vdbpsadbw" => "vdbpsadbw",
    "verr" => "verr",
    "verw" => "verw",
    "vexp2pd" => "vexp2pd",
    "vexp2ps" => "vexp2ps",
    "vexpandpd" => "vexpandpd",
    "vexpandps" => "vexpandps",
    "vextractf128" => "vextractf128",
    "vextractf32x4" => "vextractf32x4",
    "vextractf32x8" => "vextractf32x8",
    "vextractf64x2" => "vextractf64x2",
    "vextractf64x4" => "vextractf64x4",
    "vextracti128" => "vextracti128",
    "vextracti32x4" => "vextracti32x4",
    "vextracti32x8" => "vextracti32x8",
    "vextracti64x2" => "vextracti64x2",
    "vextracti64x4" => "vextracti64x4",
    "vfixupimmpd" => "vfixupimmpd",
    "vfixupimmps" => "vfixupimmps",
    "vfixupimmsd" => "vfixupimmsd",
    "vfixupimmss" => "vfixupimmss",
    "vfmadd132pd" => "vfmadd132pd",
    "vfmadd132ps" => "vfmadd132ps",
    "vfmadd132sd" => "vfmadd132sd",
    "vfmadd132ss" => "vfmadd132ss",
    "vfmadd213pd" => "vfmadd213pd",
    "vfmadd213ps" => "vfmadd213ps",
    "vfmadd213sd" => "vfmadd213sd",
    "vfmadd213ss" => "vfmadd213ss",
    "vfmadd231pd" => "vfmadd231pd",
    "vfmadd231ps" => "vfmadd231ps",
    "vfmadd231sd" => "vfmadd231sd",
    "vfmadd231ss" => "vfmadd231ss",
    "vfmaddsub132pd" => "vfmaddsub132pd",
    "vfmaddsub132ps" => "vfmaddsub132ps",
    "vfmaddsub213pd" => "vfmaddsub213pd",
    "vfmaddsub213ps" => "vfmaddsub213ps",
    "vfmaddsub231pd" => "vfmaddsub231pd",
    "vfmaddsub231ps" => "vfmaddsub231ps",
    "vfmsub132pd" => "vfmsub132pd",
    "vfmsub132ps" => "vfmsub132ps",
    "vfmsub132sd" => "vfmsub132sd",
    "vfmsub132ss" => "vfmsub132ss",
    "vfmsub213pd" => "vfmsub213pd",
    "vfmsub213ps" => "vfmsub213ps",
    "vfmsub213sd" => "vfmsub213sd",
    "vfmsub213ss" => "vfmsub213ss",
    "vfmsub231pd" => "vfmsub231pd",
    "vfmsub231ps" => "vfmsub231ps",
    "vfmsub231sd" => "vfmsub231sd",
    "vfmsub231ss" => "vfmsub231ss",
    "vfmsubadd132pd" => "vfmsubadd132pd",
    "vfmsubadd132ps" => "vfmsubadd132ps",
    "vfmsubadd213pd" => "vfmsubadd213pd",
    "vfmsubadd213ps" => "vfmsubadd213ps",
    "vfmsubadd231pd" => "vfmsubadd231pd",
    "vfmsubadd231ps" => "vfmsubadd231ps",
    "vfnmadd132pd" => "vfnmadd132pd",
    "vfnmadd132ps" => "vfnmadd132ps",
    "vfnmadd132sd" => "vfnmadd132sd",
    "vfnmadd132ss" => "vfnmadd132ss",
    "vfnmadd213pd" => "vfnmadd213pd",
    "vfnmadd213ps" => "vfnmadd213ps",
    "vfnmadd213sd" => "vfnmadd213sd",
    "vfnmadd213ss" => "vfnmadd213ss",
    "vfnmadd231pd" => "vfnmadd231pd",
    "vfnmadd231ps" => "vfnmadd231ps",
    "vfnmadd231sd" => "vfnmadd231sd",
    "vfnmadd231ss" => "vfnmadd231ss",
    "vfnmsub132pd" => "vfnmsub132pd",
    "vfnmsub132ps" => "vfnmsub132ps",
    "vfnmsub132sd" => "vfnmsub132sd",
    "vfnmsub132ss" => "vfnmsub132ss",
    "vfnmsub213pd" => "vfnmsub213pd",
    "vfnmsub213ps" => "vfnmsub213ps",
    "vfnmsub213sd" => "vfnmsub213sd",
    "vfnmsub213ss" => "vfnmsub213ss",
    "vfnmsub231pd" => "vfnmsub231pd",
    "vfnmsub231ps" => "vfnmsub231ps",
    "vfnmsub231sd" => "vfnmsub231sd",
    "vfnmsub231ss" => "vfnmsub231ss",
    "vfpclasspd" => "vfpclasspd",
    "vfpclassps" => "vfpclassps",
    "vfpclasssd" => "vfpclasssd",
    "vfpclassss" => "vfpclassss",
    "vgatherdpd" => "vgatherdpd",
    "vgatherdps" => "vgatherdps",
    "vgatherpf0dpd" => "vgatherpf0dpd",
    "vgatherpf0dps" => "vgatherpf0dps",
    "vgatherpf0qpd" => "vgatherpf0qpd",
    "vgatherpf0qps" => "vgatherpf0qps",
    "vgatherpf1dpd" => "vgatherpf1dpd",
    "vgatherpf1dps" => "vgatherpf1dps",
    "vgatherpf1qpd" => "vgatherpf1qpd",
    "vgatherpf1qps" => "vgatherpf1qps",
    "vgatherqpd" => "vgatherqpd",
    "vgatherqps" => "vgatherqps",
    "vgetexppd" => "vgetexppd",
    "vgetexpps" => "vgetexpps",
    "vgetexpsd" => "vgetexpsd",
    "vgetexpss" => "vgetexpss",
    "vgetmantpd" => "vgetmantpd",
    "vgetmantps" => "vgetmantps",
    "vgetmantsd" => "vgetmantsd",
    "vgetmantss" => "vgetmantss",
    "vinsertf128" => "vinsertf128",
    "vinsertf32x4" => "vinsertf32x4",
    "vinsertf32x8" => "vinsertf32x8",
    "vinsertf64x2" => "vinsertf64x2",
    "vinsertf64x4" => "vinsertf64x4",
    "vinserti128" => "vinserti128",
    "vinserti32x4" => "vinserti32x4",
    "vinserti32x8" => "vinserti32x8",
    "vinserti64x2" => "vinserti64x2",
    "vinserti64x4" => "vinserti64x4",
    "vmaskmov" => "vmaskmov",
    "vmcall" => "vmcall",
    "vmclear" => "vmclear",
    "vmfunc" => "vmfunc",
    "vmlaunch" => "vmlaunch",
    "vmovdqa32" => "vmovdqa32",
    "vmovdqa64" => "vmovdqa64",
    "vmovdqu16" => "vmovdqu16",
    "vmovdqu32" => "vmovdqu32",
    "vmovdqu64" => "vmovdqu64",
    "vmovdqu8" => "vmovdqu8",
    "vmptrld" => "vmptrld",
    "vmptrst" => "vmptrst",
    "vmread" => "vmread",
    "vmresume" => "vmresume",
    "vmwrite" => "vmwrite",
    "vmxoff" => "vmxoff",
    "vmxon" => "vmxon",
    "vp4dpwssd" => "vp4dpwssd",
    "vp4dpwssds" => "vp4dpwssds",
    "vpblendd" => "vpblendd",
    "vpblendmb" => "vpblendmb",
    "vpblendmd" => "vpblendmd",
    "vpblendmq" => "vpblendmq",
    "vpblendmw" => "vpblendmw",
    "vpbroadcast" => "vpbroadcast",
    "vpbroadcastb" => "vpbroadcastb",
    "vpbroadcastd" => "vpbroadcastd",
    "vpbroadcastm" => "vpbroadcastm",
    "vpbroadcastq" => "vpbroadcastq",
    "vpbroadcastw" => "vpbroadcastw",
    "vpcmpb" => "vpcmpb",
    "vpcmpd" => "vpcmpd",
    "vpcmpq" => "vpcmpq",
    "vpcmpub" => "vpcmpub",
    "vpcmpud" => "vpcmpud",
    "vpcmpuq" => "vpcmpuq",
    "vpcmpuw" => "vpcmpuw",
    "vpcmpw" => "vpcmpw",
    "vpcompressd" => "vpcompressd",
    "vpcompressq" => "vpcompressq",
    "vpconflictd" => "vpconflictd",
    "vpconflictq" => "vpconflictq",
    "vperm2f128" => "vperm2f128",
    "vperm2i128" => "vperm2i128",
    "vpermb" => "vpermb",
    "vpermd" => "vpermd",
    "vpermi2b" => "vpermi2b",
    "vpermi2d" => "vpermi2d",
    "vpermi2pd" => "vpermi2pd",
    "vpermi2ps" => "vpermi2ps",
    "vpermi2q" => "vpermi2q",
    "vpermi2w" => "vpermi2w",
    "vpermilpd" => "vpermilpd",
    "vpermilps" => "vpermilps",
    "vpermpd" => "vpermpd",
    "vpermps" => "vpermps",
    "vpermq" => "vpermq",
    "vpermt2b" => "vpermt2b",
    "vpermt2d" => "vpermt2d",
    "vpermt2pd" => "vpermt2pd",
    "vpermt2ps" => "vpermt2ps",
    "vpermt2q" => "vpermt2q",
    "vpermt2w" => "vpermt2w",
    "vpermw" => "vpermw",
    "vpexpandd" => "vpexpandd",
    "vpexpandq" => "vpexpandq",
    "vpgatherdd" => "vpgatherdd",
    "vpgatherdq" => "vpgatherdq",
    "vpgatherqd" => "vpgatherqd",
    "vpgatherqq" => "vpgatherqq",
    "vplzcntd" => "vplzcntd",
    "vplzcntq" => "vplzcntq",
    "vpmadd52huq" => "vpmadd52huq",
    "vpmadd52luq" => "vpmadd52luq",
    "vpmaskmov" => "vpmaskmov",
    "vpmovb2m" => "vpmovb2m",
    "vpmovd2m" => "vpmovd2m",
    "vpmovdb" => "vpmovdb",
    "vpmovdw" => "vpmovdw",
    "vpmovm2b" => "vpmovm2b",
    "vpmovm2d" => "vpmovm2d",
    "vpmovm2q" => "vpmovm2q",
    "vpmovm2w" => "vpmovm2w",
    "vpmovq2m" => "vpmovq2m",
    "vpmovqb" => "vpmovqb",
    "vpmovqd" => "vpmovqd",
    "vpmovqw" => "vpmovqw",
    "vpmovsdb" => "vpmovsdb",
    "vpmovsdw" => "vpmovsdw",
    "vpmovsqb" => "vpmovsqb",
    "vpmovsqd" => "vpmovsqd",
    "vpmovsqw" => "vpmovsqw",
    "vpmovswb" => "vpmovswb",
    "vpmovusdb" => "vpmovusdb",
    "vpmovusdw" => "vpmovusdw",
    "vpmovusqb" => "vpmovusqb",
    "vpmovusqd" => "vpmovusqd",
    "vpmovusqw" => "vpmovusqw",
    "vpmovuswb" => "vpmovuswb",
    "vpmovw2m" => "vpmovw2m",
    "vpmovwb" => "vpmovwb",
    "vpmultishiftqb" => "vpmultishiftqb",
    "vprold" => "vprold",
    "vprolq" => "vprolq",
    "vprolvd" => "vprolvd",
    "vprolvq" => "vprolvq",
    "vprord" => "vprord",
    "vprorq" => "vprorq",
    "vprorvd" => "vprorvd",
    "vprorvq" => "vprorvq",
    "vpscatterdd" => "vpscatterdd",
    "vpscatterdq" => "vpscatterdq",
    "vpscatterqd" => "vpscatterqd",
    "vpscatterqq" => "vpscatterqq",
    "vpsllvd" => "vpsllvd",
    "vpsllvq" => "vpsllvq",
    "vpsllvw" => "vpsllvw",
    "vpsravd" => "vpsravd",
    "vpsravq" => "vpsravq",
    "vpsravw" => "vpsravw",
    "vpsrlvd" => "vpsrlvd",
    "vpsrlvq" => "vpsrlvq",
    "vpsrlvw" => "vpsrlvw",
    "vpternlogd" => "vpternlogd",
    "vpternlogq" => "vpternlogq",
    "vptestmb" => "vptestmb",
    "vptestmd" => "vptestmd",
    "vptestmq" => "vptestmq",
    "vptestmw" => "vptestmw",
    "vptestnmb" => "vptestnmb",
    "vptestnmd" => "vptestnmd",
    "vptestnmq" => "vptestnmq",
    "vptestnmw" => "vptestnmw",
    "vrangepd" => "vrangepd",
    "vrangeps" => "vrangeps",
    "vrangesd" => "vrangesd",
    "vrangess" => "vrangess",
    "vrcp14pd" => "vrcp14pd",
    "vrcp14ps" => "vrcp14ps",
    "vrcp14sd" => "vrcp14sd",
    "vrcp14ss" => "vrcp14ss",
    "vrcp28pd" => "vrcp28pd",
    "vrcp28ps" => "vrcp28ps",
    "vrcp28sd" => "vrcp28sd",
    "vrcp28ss" => "vrcp28ss",
    "vreducepd" => "vreducepd",
    "vreduceps" => "vreduceps",
    "vreducesd" => "vreducesd",
    "vreducess" => "vreducess",
    "vrndscalepd" => "vrndscalepd",
    "vrndscaleps" => "vrndscaleps",
    "vrndscalesd" => "vrndscalesd",
    "vrndscaless" => "vrndscaless",
    "vrsqrt14pd" => "vrsqrt14pd",
    "vrsqrt14ps" => "vrsqrt14ps",
    "vrsqrt14sd" => "vrsqrt14sd",
    "vrsqrt14ss" => "vrsqrt14ss",
    "vrsqrt28pd" => "vrsqrt28pd",
    "vrsqrt28ps" => "vrsqrt28ps",
    "vrsqrt28sd" => "vrsqrt28sd",
    "vrsqrt28ss" => "vrsqrt28ss",
    "vscalefpd" => "vscalefpd",
    "vscalefps" => "vscalefps",
    "vscalefsd" => "vscalefsd",
    "vscalefss" => "vscalefss",
    "vscatterdpd" => "vscatterdpd",
    "vscatterdps" => "vscatterdps",
    "vscatterpf0dpd" => "vscatterpf0dpd",
    "vscatterpf0dps" => "vscatterpf0dps",
    "vscatterpf0qpd" => "vscatterpf0qpd",
    "vscatterpf0qps" => "vscatterpf0qps",
    "vscatterpf1dpd" => "vscatterpf1dpd",
    "vscatterpf1dps" => "vscatterpf1dps",
    "vscatterpf1qpd" => "vscatterpf1qpd",
    "vscatterpf1qps" => "vscatterpf1qps",
    "vscatterqpd" => "vscatterqpd",
    "vscatterqps" => "vscatterqps",
    "vshuff32x4" => "vshuff32x4",
    "vshuff64x2" => "vshuff64x2",
    "vshufi32x4" => "vshufi32x4",
    "vshufi64x2" => "vshufi64x2",
    "vtestpd" => "vtestpd",
    "vtestps" => "vtestps",
    "vzeroall" => "vzeroall",
    "vzeroupper" => "vzeroupper",
    "wait" => "wait",
    "wbinvd" => "wbinvd",
    "wrfsbase" => "wrfsbase",
    "wrgsbase" => "wrgsbase",
    "wrmsr" => "wrmsr",
    "wrpkru" => "wrpkru",
    "xabort" => "xabort",
    "xacquire" => "xacquire",
    "xadd" => "xadd",
    "xbegin" => "xbegin",
    "xchg" => "xchg",
    "xend" => "xend",
    "xgetbv" => "xgetbv",
    "xlat" => "xlat",
    "xlatb" => "xlatb",
    "xor" => "xor",
    "xorpd" => "xorpd",
    "vxorpd" => "vxorpd",
    "xorps" => "xorps",
    "vxorps" => "vxorps",
    "xrelease" => "xrelease",
    "xrstor" => "xrstor",
    "xrstors" => "xrstors",
    "xsave" => "xsave",
    "xsavec" => "xsavec",
    "xsaveopt" => "xsaveopt",
    "xsaves" => "xsaves",
    "xsetbv" => "xsetbv",
    "xtest" => "xtest",
}

match {
    r"[ \r\t]*" => { },
    r"#[^\n]*" => { },  // 忽略 `# 注释`.
    // 忽略 '<+34>:'
    r"<\+[0-9]+>:" => {},
} else {
    r"<[^+][^\n]+" => { },  // 忽略 `<注释>`
} else {
    _
}